package nonlinear;

/**
 * 双亲存储结构结点类:
 *      顺序存储结构,用一组连续的空间存储树的所有结点,同时在每个节点中附设一个伪指针指示其双亲的位置
 */
class PTree<E> {
    //存放节点的值
    E data;
    //存放双亲的位置
    int parent;
}
//双亲存储结构t
//PTree<E>[] t;

/**
 * 孩子链存储结构结点类:
 *      每个节点不仅包含数据值,还包括指向所有孩子结点的指针
 *      按树的度设计结点的孩子结点指针域的个数
 */
class TSonNode<E>{
    //结点的值
    E data;
    //指向孩子的结点
    TSonNode<E>[] sons;
}

/**
 * 孩子兄弟链存储结构节点类:
 *      为每个结点固定设计3个域,即一个数据元素域,一个指向该节点的第一个孩子结点的指针域,一个指向该节点的下一个兄弟结点的指针域
 */
class TSBNode<E>{
    //结点的值
    E data;
    //指向兄弟
    TSBNode<E> hp;
    //指向孩子结点
    TSBNode<E> vp;
}
